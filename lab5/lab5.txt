1. Проаналізувати приклад універсального відношення. З'ясувати які його колонки містять надлишкові дані. Виконати нормалізацію універсального 
відношення, розбивши його на кілька таблиць. 

┌──────────────┬───────────┬────────────┬────────────────┐
│   books      │ publisher │ book_theme │ book_category  │
├──────────────┼───────────┼────────────┼────────────────┤
│    number    │    id     │     id     │       id       │
│     code     │   name    │    theme   │    category    │
│   novelty    │           │            │                │
│    title     │           │            │                │
│    price     │           │            │                │
│ publisher_id │           │            │                │
│    pages     │           │            │                │
│    format    │           │            │                │
│ release_date │           │            │                │
│ circulation  │           │            │                │
│   theme_id   │           │            │                │
│ category_id  │           │            │                │
│    author    │           │            │                │
└──────────────┴───────────┴────────────┴────────────────┘

2. Скласти SQL-script, що виконує:
a. Створення таблиць бази даних. Команди для створення таблиці повинні містити головний ключ, обмеження типу null / not null, default, check, 
створення зв'язків з умовами посилальної цілісності

Створення таблиці категорій

CREATE TABLE book_category (
    id SERIAL PRIMARY KEY, 
    category_name VARCHAR(32) NOT NULL
);


Створення таблиці тем

CREATE TABLE book_theme (
    id SERIAL PRIMARY KEY,
    theme_name VARCHAR(64) NOT NULL
);

Створення таблиці видавців

CREATE TABLE publisher (
    id SERIAL PRIMARY KEY,
    name VARCHAR(32) NOT NULL
);


Створення таблиці книг

CREATE TABLE book (
    id SERIAL PRIMARY KEY,
    number BIGINT NOT NULL,
    code BIGINT NOT NULL UNIQUE,
    novelty BOOLEAN,
    title VARCHAR(128) NOT NULL,
    price NUMERIC,
    publisher_id INT REFERENCES publisher(id),
    pages BIGINT,
    format VARCHAR(12),
    release_date DATE,
    circulation BIGINT NOT NULL,
    theme_id INT REFERENCES book_theme(id),
    category_id INT REFERENCES book_category(id)
);

b. Завантаження даних в таблиці

Завантаження даних у таблиці publisher

INSERT INTO publisher (name) VALUES 
('Видавнича група BHV'),
('Вільямс'),
('МикроАрт'),
('DiaSoft'),
('ДМК'),
('Триумф'),
('Эком'),
('Києво-Могилянська академія'),
('Університет "Україна"'),
('Вінниця: ВДТУ');

Завантаження даних у таблиці book_theme

INSERT INTO book_theme (theme_name) VALUES 
('Використання ПК в цілому'),
('Апаратні засоби ПК'),
('Захист і безпека ПК'),
('Операційні системи'),
('Програмування');

Завантаження даних у таблиці book_category

INSERT INTO book_category (category_name) VALUES 
('Підручники'),
('Інші книги'),
('Windows 2000'),
('Linux'),
('Unix'),
('Інші операційні системи'),
('C&C++'),
('SQL');

Завантаження даних в таблицю книг

INSERT INTO book (number, code, novelty, title, price, publisher_id, pages, format, release_date, circulation, theme_id, category_id) VALUES 
(2, 5110, FALSE, 'Aпаратні засоби мультимедіа. Відеосистема РС', 15.51, 1, 400, '70х100/16', '2000-07-24', 5000, 1, 1),
(8, 4985, FALSE, 'Засвой самостійно модернізацію та ремонт ПК за 24 години, 2-ге вид.', 18.9, 2, 288, '70х100/16', '2000-07-07', 5000, 1, 1),
(9, 5141, FALSE, 'Структури даних та алгоритми', 37.8, 2, 384, '70х100/16', '2000-09-29', 5000, 1, 1),
(20, 5127, FALSE, 'Автоматизація інженерно-графічних робіт', 11.58, 1, 256, '70х100/16', '2000-06-15', 5000, 1, 1),
(31, 5113, FALSE, 'Апаратні засоби мультимедіа. Відеосистема РС', 15.51, 1, 400, '70х100/16', '2000-07-24', 5000, 1, 2),
(46, 5199, FALSE, 'Залізо IBM 2001', 30.07, 3, 368, '70х100/16', '2000-02-12', 5000, 1, 2),
(50, 3851, FALSE, 'Захист інформації та безпека компютерних систем', 26, 4, 480, '84х108/16', '1900-01-01', 5000, 1, 3),
(58, 3932, FALSE, 'Як перетворити персональний компютер на вимірювальний комплексс', 7.65, 5, 144, '60х88/16', '2000-06-09', 5000, 1, 6),
(59, 4713, FALSE, 'Plug-ins. Додаткові програми для музичних програм', 11.41, 5, 144, '70х100/16', '2000-02-22', 5000, 1, 6),
(175, 5217, FALSE, 'Windows МЕ. Найновіші версії програм', 16.57, 6, 320, '70х100/16', '2000-08-25', 5000, 4, 3),
(176, 4829, FALSE, 'Windows 2000 Professional крок за кроком з CD', 27.25, 7, 320, '70х100/16', '2000-04-28', 5000, 4, 3),
(188, 5170, FALSE, 'Linux версії', 24.43, 5, 346, '70х100/16', '2000-09-29', 5000, 4, 4),
(191, 860, FALSE, 'Операційна система UNIX', 3.5, 1, 395, '84х10016', '1997-05-05', 5000, 4, 5),
(203, 44, FALSE, 'Відповіді на актуальні запитання щодо OS/2 Warp', 5, 4, 352, '60х84/16', '1996-03-20', 5000, 4, 6),
(206, 5176, FALSE, 'Windows Ме. Супутник користувача', 12.79, 1, 306, '', '2000-10-10', 5000, 4, 6),
(209, 5462, FALSE, 'Мова програмування С++. Лекції та вправи', 29, 4, 656, '84х108/16', '2000-12-12', 5000, 5, 7),
(210, 4982, FALSE, 'Мова програмування С. Лекції та вправи', 29, 4, 432, '84х108/16', '2000-12-07', 5000, 5, 7),
(220, 4687, FALSE, 'Ефективне використання C++ .50 рекомендацій щодо покращення ваших програм та проектів', 17.6, 5, 240, '70х100/16', '2000-03-02', 5000, 5, 7),
(222, 235, FALSE, 'Інформаційні системи і структури даних', NULL, 8, 288, '60х90/16', NULL, 400, 1, 6),
(225, 8746, TRUE, 'Бази даних в інформаційних системах', NULL, 9, 418, '60х84/16', '2018-07-25', 100, 5, 8),
(226, 2154, TRUE, 'Сервер на основі операційної системи FreeBSD 6.1', 0, 9, 216, '60х84/16', '2015-11-03', 500, 5, 6),
(245, 2662, FALSE, 'Організація баз даних та знань', 0, 10, 208, '60х90/16', '2001-10-10', 1000, 5, 8),
(247, 5641, TRUE, 'Організація баз даних та знань', 0, 1, 384, '70х100/16', '2021-12-15', 5000, 5, 8);

!!!3-4 PgAdmin4 ЗРОБИВ АВТОМАТИЧНО!!!

3. Побудувати діаграму зв'язків таблиць бази даних використовуючи інструмент Designer.
3. Діаграма зв'язків таблиць:
Для побудови діаграми зв'язків таблиць я використав інструмент ERD (Entity-Relationship Diagram).

4. Створити зв’язки в базі даних між таблицями. 
a. Вивчити роботу створення зв’язків між таблицями в полі Designer
b. Створити майстром e Designer кілька варіантів зв’язків у базі даних
c. Проаналізувати і пояснити особливості зв’язків, створених Designer
d. Порівняти з тими, що написані самостійно.
e. Зробити висновки

!!!3-4 PgAdmin4 ЗРОБИВ АВТОМАТИЧНО!!!

5. Створити і перевірити представлення для отримання універсального відношення з набору нормалізованих таблиць бази даних

CREATE VIEW book_info AS
SELECT
    b.id AS book_id,
    b.number AS book_number,
    b.code AS book_code,
    b.novelty AS book_novelty,
    b.title AS book_title,
    b.price AS book_price,
    p.name AS publisher_name,
    b.pages AS book_pages,
    b.format AS book_format,
    b.release_date AS book_release_date,
    b.circulation AS book_circulation,
    bt.theme_name AS book_theme,
    bc.category_name AS book_category
FROM 
    book AS b
JOIN 
    publisher AS p ON b.publisher_id = p.id
JOIN 
    book_theme AS bt ON b.theme_id = bt.id
JOIN 
    book_category AS bc ON b.category_id = bc.id;